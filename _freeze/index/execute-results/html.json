{
  "hash": "fed98a723b9f3dcbf080cfda5d38b033",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Introduction\njupyter: python3\n---\n\n\n\n\n\n\nThis course is aimed at the Python developer who wants to learn how to do useful data analysis tasks. Over the years, Python has become a very popular tool for analysing data. These days it comes with support from many tools to do machine learning, data querying, neural networks and exploratory analysis. In this course we will investigate the use of `scikit-learn` for machine learning to discover things about whatever data may come across your desk.\n\nFor the purpose of this course we will be using a free tool called JupyterLab which provides you with a local editor and Python terminal in your web browser. Setting up instructions can be found [here](\"pages/001-workspace-setup.qmd\").\n\n\n### Intended learning outcomes\n\nBy the end of this course, you will:\n\n- Know how to use Jupyter Notebooks.\n- Be familiar with `scikit-learn` and `seaborn`.\n- Know how to perform simple machine learning tasks.\n\n\n\n\n## How to read this documentation\n\nIn this documentation, any time that we are seeing a small snippet of Python code, we'll see it written in a grey box like the following:\n\n```{.python}\nprint(\"Hello, Python\")\n```\n\nIf the commands are executed by the machine we will see the output of them below enclosed on a vertical purple line:\n\n::: {#f9860197 .cell execution_count=1}\n``` {.python .cell-code}\nprint(\"Hello, Python!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, Python!\n```\n:::\n:::\n\n\nBy contrast, you will see larger peces of code as scripts with a given name, e.g. `script.py`, in a code block with darker header:\n\n```{.python filename=\"script.py\"}\ngreeting = \"Hello\"\nname = input(\"What is your name? \")\nprint(greeting, name)\n```\n\nWe may ask you to run a script using the `Command Prompt` (Windows) or `Terminal` (Mac and Linux). We will show you what commands to run and will look like this:\n```{.bash filename=\"Terminal/Command Prompt\"}\npython script.py\n```\n\n**Please note that sometimes we will skip showing the execution of scripts on the Terminal/Command Prompt box, but we will assume you to run the script on your.**\n\nIn some cases we will introduce general programming concepts and structures using pseudocode, a high-level, easy-to-read syntax close to natural language. This should not be confused with Python code and cannot be executed on your machine, but it is useful to describe how your code should behave. Here there is an example:\n```\nFOR EACH sample IN my_study\n    IF (sample.value > 100)\n        DO SOMETHING\n    OTHERWISE\n        DO SOMETHING ELSE\n```\n\n\nThere are some exercises along this course, and it is important you try to answer them yourself to understand how Python works. Exercises are shown in blue boxes followed by a yellow box that contains the answer of each exercise. We recommend you to try to answer each exercise yourself before looking at the solution. \n\n::: {#exampleN .callout-note icon=false title='Exercise'}\nThis is an exercise. You will need to click in the below box to see the answer.\n:::\n\n::: {#answerN .callout-caution icon=false title='Answer (click to open)' collapse=\"true\"}\nThis is the answer.\n:::\n\nLast, we will highlight important points using green boxes like this one:\n\n::: {#keypointsN .callout-tip icon=false title='Key points'}\nThese are important concepts and technical notes.\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}